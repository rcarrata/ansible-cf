---

- name: '[HEAT-ANSIBLE] Create the directory for ansible-cf code'
  delegate_to: localhost
  file: 
    path: "{{ code_dest_dir }}"    
    state: directory
    mode: 0755
 
- name: '[HEAT-ANSIBLE] Create the Heat Orchestration Template rendered'
  delegate_to: localhost
  template:
    src: "{{ heat_template }}"
    dest: "{{ code_dest_dir }}/{{ heat_template }}"
    mode: 0644

- name: '[HEAT-ANSIBLE] Create Stack' 
  delegate_to: localhost
  environment:
    OS_USERNAME: "{{ ADMIN_USER }}"
    OS_PASSWORD: "{{ OSP_PASS }}"
    OS_AUTH_URL: "http://{{ KEYSTONE_ENDPOINT }}:{{ KEYSTONE_ADMIN_PORT }}/v3/"
    OS_IDENTITY_API_VERSION: "3"
    OS_PROJECT_NAME: "admin"
    OS_PROJECT_DOMAIN_NAME: "Default"
    OS_USER_DOMAIN_NAME: "Default"
    OS_REGION_NAME: "RegionOne"
  os_stack: 
    name: "{{ stack_name }}"
    state: present
    template: "{{ code_dest_dir }}/{{ heat_template }}"
  register: stack_create

- name: '[HEAT-ANSIBLE] Get VM info about heat-stack'
  environment:
    OS_USERNAME: "{{ ADMIN_USER }}"
    OS_PASSWORD: "{{ OSP_PASS }}"
    OS_AUTH_URL: "http://{{ KEYSTONE_ENDPOINT }}:{{ KEYSTONE_ADMIN_PORT }}/v3/"
    OS_IDENTITY_API_VERSION: "3"
    OS_PROJECT_NAME: "admin"
    OS_PROJECT_DOMAIN_NAME: "Default"
    OS_USER_DOMAIN_NAME: "Default"
    OS_REGION_NAME: "RegionOne"
  shell: "heat resource-list test-stack | grep Server | awk '{ print $4 }'"
  register: server_list

- name: 'Debug'
  debug: 
    msg: "{{ server_list }}"

- name: '[HEAT-ANSIBLE] Check VMs'
  os_server_facts: "{{ item }}"
  with_items: "{{ server_list }}"  

- name: '[HEAT-ANSIBLE] Debug'
  debug:
    msg: "{{ openstack_servers }}"





















